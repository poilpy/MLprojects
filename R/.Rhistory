swirl()
library(swirl)
swirl()
french_fries.m = melt(french_fries)
library(ggplot2)
data(french_fries)
library(reshape2)
data(french_fries)
french_fries.m = melt(french_fries)
french_fries.m = melt(french_fries)
View(french_fries.m)
french_fries.m = melt(french_fries)
french_fries.m = melt(french_fries, id=c("variable", "value"))
french_fries.m = melt(french_fries, id~variable)
french_fries.m = melt(french_fries, id=c("time", "treatment", "subject", "rep"))
View(french_fries.m)
0
co
bill
tan3
tan(3)
RIsis
RIsis.r
ls
ls()
source('~/GitHub/MLprojects/R/RIsis.r')
source('~/GitHub/MLprojects/R/RIsis.r')
source('~/GitHub/MLprojects/R/RIsis.r')
source('~/GitHub/MLprojects/R/Isis.r')
View(dataset)
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Adults.r')
View(dataset)
qplot(dataset)
qplot(v4, data=dataset)
qplot(dataset$v4, data=dataset)
qplot(dataset$v5, data=dataset)
library(ggvis)
install(ggvis)
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
names(dataset) <- c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width", "Species")
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
View(dataset)
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
print(25)
source('~/GitHub/MLprojects/R/Iris.r')
d
source('~/GitHub/MLprojects/R/Iris.r')
print(25)
print(25)
print(head(irisSet))
head(irisSet)
print(head(irisSet))
library(RCurl)
urlfile <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
downloaded <- getURL(urlfile, ssl.verifypeer=FALSE)
connection <- textConnection(downloaded)
irisSet <- read.csv(connection, header = FALSE)
print(head(irisSet))
names(irisSet) <- c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width", "Species")
print(25)
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
table(irisSet$Species)
table(irisSet$Petal.Length)
summary(irisSet)
data("mtcars")
View(mtcars)
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
irisSet.train <- irisSet[1:bound, ]              #get training set
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
View(iris)
rm(mtcars)
rm(h)
rm(yourname)
View(irisSet)
View(irisSet.test)
View(irisSet.train)
library(e1071)
install.packages(e1071)
install.packages("e1071")
install.packages(c("rpart", "igraph", "nnet", "caret"))
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
attach(iris)
source('~/GitHub/MLprojects/R/Iris.r')
irisSet.train.x <- subset(irisSet.train, select=-Species)
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
svm_model <- svm(irisSet.train.x, irisSet.train.y)
source('~/GitHub/MLprojects/R/Iris.r')
irisSet.test.y <- irisSet.train$Species
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
print(svm_model$best.performance)
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
print(svm_tune)
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
table(irisSet.test.y)
table(irisSet.test.y)
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
help(~)
help()
apropos(net)
apropos("net")
x = c(1, 2, 3)
y = c(1)
c(x, y)
r(x, y)
help(":")
c(x:x*2)
t(x)
x
help("$")
source('~/GitHub/MLprojects/R/Iris.r')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
lvs <- c("normal", "abnormal")
truth <- factor(rep(lvs, times = c(86, 258)),
levels = rev(lvs))
pred <- factor(
c(
rep(lvs, times = c(54, 32)),
rep(lvs, times = c(27, 231))),
levels = rev(lvs))
xtab <- table(pred, truth)
results <- confusionMatrix(xtab)
as.table(results)
as.matrix(results)
as.matrix(results, what = "overall")
as.matrix(results, what = "classes")
###################
## 3 class example
xtab <- confusionMatrix(iris$Species, sample(iris$Species))
as.matrix(xtab)
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
# By default R comes with few datasets.
data = mtcars
dim(data)  # 32 11
#Sample Indexes
indexes = sample(1:nrow(data), size=0.2*nrow(data))
# Split data
test = data[indexes,]
dim(test)  # 6 11
train = data[-indexes,]
dim(train) # 26 11
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
source('~/GitHub/MLprojects/R/Iris.r')
setwd("~/GitHub/MLprojects/R")
